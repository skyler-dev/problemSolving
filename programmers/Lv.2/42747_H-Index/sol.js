// https://school.programmers.co.kr/learn/courses/30/lessons/42747
/**
 * H-Index는 과학자의 생산성과 영향력을 나타내는 지표입니다. 어느 과학자의 H-Index를 나타내는 값인 h를 구하려고 합니다. 위키백과1에 따르면, H-Index는 다음과 같이 구합니다.
 * 어떤 과학자가 발표한 논문 n편 중, h번 이상 인용된 논문이 h편 이상이고 나머지 논문이 h번 이하 인용되었다면 h의 최댓값이 이 과학자의 H-Index입니다.
 * 어떤 과학자가 발표한 논문의 인용 횟수를 담은 배열 citations가 매개변수로 주어질 때, 이 과학자의 H-Index를 return 하도록 solution 함수를 작성해주세요.
 */

function solution(citations) {
    // R이라는 연구자의 h지수는, "R연구자가 출판한 전체 논문 가운데, 피인용회수가 h이상인 논문이 h개를 채우는 수치"가 된다.
    
    const n = citations.length;
    citations.sort((a,b)=>b-a); // 예를 들어 [6, 5, 3, 1, 0]일 때,
    
    for(let i  = 0 ; i < n ; i++) {
        // citations[i]이상 인용된 논문이 i + 1 편인 상태
        // 6번 이상 인용 , 1편 -> 1편은 확실하게 1번 이상 인용 -> 더 큰 h가 있는지 확인
        // 5번 이상 인용 , 2편 -> 2편은 확실하게 2번 이상 인용 -> 더 큰 h가 있는지 확인
        // 3번 이상 인용 , 3편 -> 3편은 확실하게 3번 이상 인용 -> 더 큰 h가 있는지 확인
        // 1번 이상 인용 , 4편 -> 이전 인덱스 반환
        // 0번 이상 인용 , 5편
        if(citations[i] < i + 1) return i;
    }
    // h의 최대값은 n을 초과할 수 없다.
    return n;
}

// 정확성  테스트
// 테스트 1 〉	통과 (0.40ms, 33.6MB)
// 테스트 2 〉	통과 (0.40ms, 33.5MB)
// 테스트 3 〉	통과 (0.36ms, 33.5MB)
// 테스트 4 〉	통과 (0.31ms, 33.5MB)
// 테스트 5 〉	통과 (0.61ms, 33.5MB)
// 테스트 6 〉	통과 (0.62ms, 33.5MB)
// 테스트 7 〉	통과 (0.20ms, 33.5MB)
// 테스트 8 〉	통과 (0.16ms, 33.5MB)
// 테스트 9 〉	통과 (0.25ms, 33.5MB)
// 테스트 10 〉	통과 (0.26ms, 33.4MB)
// 테스트 11 〉	통과 (0.40ms, 33.5MB)
// 테스트 12 〉	통과 (0.16ms, 33.6MB)
// 테스트 13 〉	통과 (0.72ms, 33.5MB)
// 테스트 14 〉	통과 (0.43ms, 33.5MB)
// 테스트 15 〉	통과 (0.71ms, 33.5MB)
// 테스트 16 〉	통과 (0.06ms, 33.5MB)