// https://school.programmers.co.kr/learn/courses/30/lessons/42577
/**
 * [문제 설명]
 * 전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다.
 * 전화번호가 다음과 같을 경우, 구조대 전화번호는 영석이의 전화번호의 접두사입니다.
 * 구조대 : 119
 * 박준영 : 97 674 223
 * 지영석 : 11 9552 4421
 * 전화번호부에 적힌 전화번호를 담은 배열 phone_book 이 solution 함수의 매개변수로 주어질 때, 어떤 번호가 다른 번호의 접두어인 경우가 있으면 false를 그렇지 않으면 true를 return 하도록 solution 함수를 작성해주세요.
 * 
 * [제한 사항]
 * phone_book의 길이는 1 이상 1,000,000 이하입니다.
 * * 각 전화번호의 길이는 1 이상 20 이하입니다.
 * * 같은 전화번호가 중복해서 들어있지 않습니다.
 */

function solution(phone_book) {
    // ["112", "11"]를 ["11", "112"]로
    const sorted = [...phone_book].sort();
    const book = new Set();
    
    for(const num of sorted) {
        // 번호를 순회하면서,
        let prefix = '';
        for(const c of num){
            // 접두어 만들고
            prefix += c;
            // 지금까지 추가한 set에 있는 지 확인
            if(book.has(prefix)) return false;
        }
        book.add(num);
    }
    return true;
}

// 정확성  테스트
// 테스트 1 〉	통과 (0.11ms, 33.4MB)
// 테스트 2 〉	통과 (0.09ms, 33.4MB)
// 테스트 3 〉	통과 (0.09ms, 33.4MB)
// 테스트 4 〉	통과 (0.08ms, 33.3MB)
// 테스트 5 〉	통과 (0.09ms, 33.4MB)
// 테스트 6 〉	통과 (0.09ms, 33.5MB)
// 테스트 7 〉	통과 (0.10ms, 33.5MB)
// 테스트 8 〉	통과 (0.09ms, 33.4MB)
// 테스트 9 〉	통과 (0.07ms, 33.4MB)
// 테스트 10 〉	통과 (0.09ms, 33.5MB)
// 테스트 11 〉	통과 (0.07ms, 33.4MB)
// 테스트 12 〉	통과 (0.08ms, 33.3MB)
// 테스트 13 〉	통과 (0.06ms, 33.4MB)
// 테스트 14 〉	통과 (1.96ms, 34.3MB)
// 테스트 15 〉	통과 (2.16ms, 34.4MB)
// 테스트 16 〉	통과 (7.73ms, 37.8MB)
// 테스트 17 〉	통과 (35.96ms, 37.9MB)
// 테스트 18 〉	통과 (60.95ms, 38.1MB)
// 테스트 19 〉	통과 (2.08ms, 34.4MB)
// 테스트 20 〉	통과 (7.93ms, 38.1MB)
// 효율성  테스트
// 테스트 1 〉	통과 (3.92ms, 34.7MB)
// 테스트 2 〉	통과 (3.45ms, 35.3MB)
// 테스트 3 〉	통과 (581.32ms, 90.7MB)
// 테스트 4 〉	통과 (394.62ms, 87.5MB)