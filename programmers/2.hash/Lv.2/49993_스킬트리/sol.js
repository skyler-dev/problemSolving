//
/**
 * [문제 설명]
 * 선행 스킬이란 어떤 스킬을 배우기 전에 먼저 배워야 하는 스킬을 뜻합니다.
 * 예를 들어 선행 스킬 순서가 스파크 → 라이트닝 볼트 → 썬더일때, 썬더를 배우려면 먼저 라이트닝 볼트를 배워야 하고, 라이트닝 볼트를 배우려면 먼저 스파크를 배워야 합니다.
 * 위 순서에 없는 다른 스킬(힐링 등)은 순서에 상관없이 배울 수 있습니다. 따라서 스파크 → 힐링 → 라이트닝 볼트 → 썬더와 같은 스킬트리는 가능하지만, 썬더 → 스파크나 라이트닝 볼트 → 스파크 → 힐링 → 썬더와 같은 스킬트리는 불가능합니다.
 * 선행 스킬 순서 skill과 유저들이 만든 스킬트리1를 담은 배열 skill_trees가 매개변수로 주어질 때, 가능한 스킬트리 개수를 return 하는 solution 함수를 작성해주세요.
 * 
 * [제한 조건]
 * 스킬은 알파벳 대문자로 표기하며, 모든 문자열은 알파벳 대문자로만 이루어져 있습니다.
 * 스킬 순서와 스킬트리는 문자열로 표기합니다.
 * * 예를 들어, C → B → D 라면 "CBD"로 표기합니다
 * 선행 스킬 순서 skill의 길이는 1 이상 26 이하이며, 스킬은 중복해 주어지지 않습니다.
 * skill_trees는 길이 1 이상 20 이하인 배열입니다.
 * skill_trees의 원소는 스킬을 나타내는 문자열입니다.
 * * skill_trees의 원소는 길이가 2 이상 26 이하인 문자열이며, 스킬이 중복해 주어지지 않습니다.
 */

function solution(skill, skill_trees) {
    // 선행스킬이 필요한 스킬인지 확인용
    const skills = new Set([...skill]);
    let cnt = skill_trees.length;
    
    skill_trees.forEach((tree)=>{
        const queue = [...skill]; 
        
        for(let s of tree){
            if(skills.has(s)){
                if(s !== queue[0]){
                    cnt-=1;
                    break; // 다음 트리로
                }
                queue.shift();// skill의 길이 26이하, skill_trees의 길이 20이하므로 요소 적어 자바스크립트 엔진 최적화
            }
        }
    })
    
    return cnt;
}

// 정확성  테스트
// 테스트 1 〉	통과 (0.08ms, 33.5MB)
// 테스트 2 〉	통과 (0.18ms, 33.5MB)
// 테스트 3 〉	통과 (0.18ms, 33.5MB)
// 테스트 4 〉	통과 (0.31ms, 33.4MB)
// 테스트 5 〉	통과 (0.21ms, 33.5MB)
// 테스트 6 〉	통과 (0.18ms, 33.5MB)
// 테스트 7 〉	통과 (0.18ms, 33.5MB)
// 테스트 8 〉	통과 (0.32ms, 33.5MB)
// 테스트 9 〉	통과 (0.25ms, 33.5MB)
// 테스트 10 〉	통과 (0.25ms, 33.6MB)
// 테스트 11 〉	통과 (0.20ms, 33.6MB)
// 테스트 12 〉	통과 (0.18ms, 33.6MB)
// 테스트 13 〉	통과 (0.18ms, 33.5MB)
// 테스트 14 〉	통과 (0.18ms, 33.6MB)